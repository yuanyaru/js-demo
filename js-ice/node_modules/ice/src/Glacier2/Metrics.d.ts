//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.2
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


export namespace IceMX
{
    /**
     * Provides information on Glacier2 sessions.
     */
    class SessionMetrics extends Metrics
    {
        /**
         * One-shot constructor to initialize all data members.
         * @param id The metrics identifier.
         * @param total The total number of objects that were observed by this metrics.
         * @param current The current number of objects observed by this metrics.
         * @param totalLifetime The sum of the lifetime of each observed objects.
         * @param failures The number of failures observed.
         * @param forwardedClient Number of client requests forwared.
         * @param forwardedServer Number of server requests forwared.
         * @param routingTableSize The size of the routing table.
         * @param queuedClient Number of client requests queued.
         * @param queuedServer Number of server requests queued.
         * @param overriddenClient Number of client requests overridden.
         * @param overriddenServer Number of server requests overridden.
         */
        constructor(id?:string, total?:Ice.Long, current?:number, totalLifetime?:Ice.Long, failures?:number, forwardedClient?:number, forwardedServer?:number, routingTableSize?:number, queuedClient?:number, queuedServer?:number, overriddenClient?:number, overriddenServer?:number);
        /**
         * Number of client requests forwared.
         */
        forwardedClient:number;
        /**
         * Number of server requests forwared.
         */
        forwardedServer:number;
        /**
         * The size of the routing table.
         */
        routingTableSize:number;
        /**
         * Number of client requests queued.
         */
        queuedClient:number;
        /**
         * Number of server requests queued.
         */
        queuedServer:number;
        /**
         * Number of client requests overridden.
         */
        overriddenClient:number;
        /**
         * Number of server requests overridden.
         */
        overriddenServer:number;
    }
}
