"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
var Ice = require("../Ice/TcpEndpointI").Ice;

var TcpEndpointI = Ice.TcpEndpointI;

var TcpEndpointFactory =
/*#__PURE__*/
function () {
  function TcpEndpointFactory(instance) {
    _classCallCheck(this, TcpEndpointFactory);

    this._instance = instance;
  }

  _createClass(TcpEndpointFactory, [{
    key: "type",
    value: function type() {
      return this._instance.type();
    }
  }, {
    key: "protocol",
    value: function protocol() {
      return this._instance.protocol();
    }
  }, {
    key: "create",
    value: function create(args, oaEndpoint) {
      var e = new TcpEndpointI(this._instance);
      e.initWithOptions(args, oaEndpoint);
      return e;
    }
  }, {
    key: "read",
    value: function read(s) {
      var e = new TcpEndpointI(this._instance);
      e.initWithStream(s);
      return e;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this._instance = null;
    }
  }, {
    key: "clone",
    value: function clone(instance) {
      return new TcpEndpointFactory(instance);
    }
  }]);

  return TcpEndpointFactory;
}();

Ice.TcpEndpointFactory = TcpEndpointFactory;
module.exports.Ice = Ice;