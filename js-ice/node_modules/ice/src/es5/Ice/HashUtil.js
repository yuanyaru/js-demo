"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
var Ice = require("../Ice/StringUtil").Ice;

var StringUtil = Ice.StringUtil;

var HashUtil =
/*#__PURE__*/
function () {
  function HashUtil() {
    _classCallCheck(this, HashUtil);
  }

  _createClass(HashUtil, null, [{
    key: "addBoolean",
    value: function addBoolean(h, b) {
      return (h << 5) + h ^ (b ? 0 : 1);
    }
  }, {
    key: "addString",
    value: function addString(h, str) {
      if (str !== undefined && str !== null) {
        h = (h << 5) + h ^ StringUtil.hashCode(str);
      }

      return h;
    }
  }, {
    key: "addNumber",
    value: function addNumber(h, num) {
      return (h << 5) + h ^ num;
    }
  }, {
    key: "addHashable",
    value: function addHashable(h, obj) {
      if (obj !== undefined && obj !== null) {
        h = (h << 5) + h ^ obj.hashCode();
      }

      return h;
    }
  }, {
    key: "addArray",
    value: function addArray(h, arr, hashCode) {
      if (arr !== undefined && arr !== null) {
        for (var i = 0; i < arr.length; ++i) {
          h = hashCode(h, arr[i]);
        }
      }

      return h;
    }
  }]);

  return HashUtil;
}();

Ice.HashUtil = HashUtil;
module.exports.Ice = Ice;