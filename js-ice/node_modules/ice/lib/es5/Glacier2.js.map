{"version":3,"sources":["Glacier2.js"],"names":["root","window","global","self","ice","Glacier2","Slice","Ice","SSLInfo","remoteHost","remotePort","localHost","localPort","cipher","certs","ostr","writeString","writeInt","StringSeqHelper","write","istr","readString","readInt","read","defineStruct","iceC_IceMX_SessionMetrics_ids","IceMX","SessionMetrics","id","total","current","totalLifetime","failures","forwardedClient","forwardedServer","routingTableSize","queuedClient","queuedServer","overriddenClient","overriddenServer","Metrics","defineValue","CannotCreateSessionException","reason","_cause","UserException","PreservedUserException","iceC_Glacier2_Session_ids","Session","Object","SessionPrx","ObjectPrx","defineOperations","iceC_Glacier2_StringSet_ids","StringSet","StringSetPrx","iceC_Glacier2_IdentitySet_ids","IdentitySet","IdentitySetPrx","iceC_Glacier2_SessionControl_ids","SessionControl","SessionControlPrx","iceC_Glacier2_SessionManager_ids","SessionManager","SessionManagerPrx","iceC_Glacier2_SSLSessionManager_ids","SSLSessionManager","SSLSessionManagerPrx","PermissionDeniedException","iceC_Glacier2_PermissionsVerifier_ids","PermissionsVerifier","PermissionsVerifierPrx","iceC_Glacier2_SSLPermissionsVerifier_ids","SSLPermissionsVerifier","SSLPermissionsVerifierPrx","SessionNotExistException","iceC_Glacier2_Router_ids","Router","RouterPrx"],"mappings":"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","sourcesContent":["(function()\n{\n    var root = typeof(window) !== \"undefined\" ? window : typeof(global) !== \"undefined\" ? global : typeof(self) !== \"undefined\" ? self : {};\n    var ice = root.ice || {};\n    root.Glacier2 = root.Glacier2 || {};\n    ice.Glacier2 = root.Glacier2;\n    var Slice = Ice.Slice;\n\n    (function()\n    {\n        //\n        // Copyright (c) ZeroC, Inc. All rights reserved.\n        //\n        //\n        // Ice version 3.7.2\n        //\n        // <auto-generated>\n        //\n        // Generated from file `SSLInfo.ice'\n        //\n        // Warning: do not edit this file.\n        //\n        // </auto-generated>\n        //\n        \n        /* eslint-disable */\n        /* jshint ignore: start */\n        \n        \n            /**\n             * Information taken from an SSL connection used for permissions\n             * verification.\n             *\n             * @see PermissionsVerifier\n             *\n             **/\n            Glacier2.SSLInfo = class\n            {\n                constructor(remoteHost = \"\", remotePort = 0, localHost = \"\", localPort = 0, cipher = \"\", certs = null)\n                {\n                    this.remoteHost = remoteHost;\n                    this.remotePort = remotePort;\n                    this.localHost = localHost;\n                    this.localPort = localPort;\n                    this.cipher = cipher;\n                    this.certs = certs;\n                }\n        \n                _write(ostr)\n                {\n                    ostr.writeString(this.remoteHost);\n                    ostr.writeInt(this.remotePort);\n                    ostr.writeString(this.localHost);\n                    ostr.writeInt(this.localPort);\n                    ostr.writeString(this.cipher);\n                    Ice.StringSeqHelper.write(ostr, this.certs);\n                }\n        \n                _read(istr)\n                {\n                    this.remoteHost = istr.readString();\n                    this.remotePort = istr.readInt();\n                    this.localHost = istr.readString();\n                    this.localPort = istr.readInt();\n                    this.cipher = istr.readString();\n                    this.certs = Ice.StringSeqHelper.read(istr);\n                }\n        \n                static get minWireSize()\n                {\n                    return  12;\n                }\n            };\n        \n            Slice.defineStruct(Glacier2.SSLInfo, true, true);\n        \n    }());\n\n    (function()\n    {\n        //\n        // Copyright (c) ZeroC, Inc. All rights reserved.\n        //\n        //\n        // Ice version 3.7.2\n        //\n        // <auto-generated>\n        //\n        // Generated from file `Metrics.ice'\n        //\n        // Warning: do not edit this file.\n        //\n        // </auto-generated>\n        //\n        \n        /* eslint-disable */\n        /* jshint ignore: start */\n        \n        \n            const iceC_IceMX_SessionMetrics_ids = [\n                \"::Ice::Object\",\n                \"::IceMX::Metrics\",\n                \"::IceMX::SessionMetrics\"\n            ];\n        \n            /**\n             * Provides information on Glacier2 sessions.\n             *\n             **/\n            IceMX.SessionMetrics = class extends IceMX.Metrics\n            {\n                constructor(id, total, current, totalLifetime, failures, forwardedClient = 0, forwardedServer = 0, routingTableSize = 0, queuedClient = 0, queuedServer = 0, overriddenClient = 0, overriddenServer = 0)\n                {\n                    super(id, total, current, totalLifetime, failures);\n                    this.forwardedClient = forwardedClient;\n                    this.forwardedServer = forwardedServer;\n                    this.routingTableSize = routingTableSize;\n                    this.queuedClient = queuedClient;\n                    this.queuedServer = queuedServer;\n                    this.overriddenClient = overriddenClient;\n                    this.overriddenServer = overriddenServer;\n                }\n        \n                _iceWriteMemberImpl(ostr)\n                {\n                    ostr.writeInt(this.forwardedClient);\n                    ostr.writeInt(this.forwardedServer);\n                    ostr.writeInt(this.routingTableSize);\n                    ostr.writeInt(this.queuedClient);\n                    ostr.writeInt(this.queuedServer);\n                    ostr.writeInt(this.overriddenClient);\n                    ostr.writeInt(this.overriddenServer);\n                }\n        \n                _iceReadMemberImpl(istr)\n                {\n                    this.forwardedClient = istr.readInt();\n                    this.forwardedServer = istr.readInt();\n                    this.routingTableSize = istr.readInt();\n                    this.queuedClient = istr.readInt();\n                    this.queuedServer = istr.readInt();\n                    this.overriddenClient = istr.readInt();\n                    this.overriddenServer = istr.readInt();\n                }\n            };\n        \n            Slice.defineValue(IceMX.SessionMetrics, iceC_IceMX_SessionMetrics_ids[2], false);\n        \n    }());\n\n    (function()\n    {\n        //\n        // Copyright (c) ZeroC, Inc. All rights reserved.\n        //\n        //\n        // Ice version 3.7.2\n        //\n        // <auto-generated>\n        //\n        // Generated from file `Session.ice'\n        //\n        // Warning: do not edit this file.\n        //\n        // </auto-generated>\n        //\n        \n        /* eslint-disable */\n        /* jshint ignore: start */\n        \n        \n            /**\n             * This exception is raised if an attempt to create a new session failed.\n             *\n             **/\n            Glacier2.CannotCreateSessionException = class extends Ice.UserException\n            {\n                constructor(reason = \"\", _cause = \"\")\n                {\n                    super(_cause);\n                    this.reason = reason;\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::Glacier2::CannotCreateSessionException\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return Glacier2.CannotCreateSessionException;\n                }\n        \n                _writeMemberImpl(ostr)\n                {\n                    ostr.writeString(this.reason);\n                }\n        \n                _readMemberImpl(istr)\n                {\n                    this.reason = istr.readString();\n                }\n            };\n        \n            Slice.PreservedUserException(Glacier2.CannotCreateSessionException);\n        \n            const iceC_Glacier2_Session_ids = [\n                \"::Glacier2::Session\",\n                \"::Ice::Object\"\n            ];\n        \n            /**\n             * A client-visible session object, which is tied to the lifecycle of a {@link Router}.\n             *\n             * @see Router\n             * @see SessionManager\n             *\n             **/\n            Glacier2.Session = class extends Ice.Object\n            {\n            };\n        \n            Glacier2.SessionPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(Glacier2.Session, Glacier2.SessionPrx, iceC_Glacier2_Session_ids, 0,\n            {\n                \"destroy\": [, , , , , , , , , ]\n            });\n        \n            const iceC_Glacier2_StringSet_ids = [\n                \"::Glacier2::StringSet\",\n                \"::Ice::Object\"\n            ];\n        \n            /**\n             * An object for managing the set of identity constraints for specific\n             * parts of object identity on a\n             * {@link Session}.\n             *\n             * @see Session\n             * @see SessionControl\n             *\n             **/\n            Glacier2.StringSet = class extends Ice.Object\n            {\n            };\n        \n            Glacier2.StringSetPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(Glacier2.StringSet, Glacier2.StringSetPrx, iceC_Glacier2_StringSet_ids, 0,\n            {\n                \"add\": [, 2, 2, , , [[\"Ice.StringSeqHelper\"]], , , , ],\n                \"remove\": [, 2, 2, , , [[\"Ice.StringSeqHelper\"]], , , , ],\n                \"get\": [, 2, 2, , [\"Ice.StringSeqHelper\"], , , , , ]\n            });\n        \n            const iceC_Glacier2_IdentitySet_ids = [\n                \"::Glacier2::IdentitySet\",\n                \"::Ice::Object\"\n            ];\n        \n            /**\n             * An object for managing the set of object identity constraints on a\n             * {@link Session}.\n             *\n             * @see Session\n             * @see SessionControl\n             *\n             **/\n            Glacier2.IdentitySet = class extends Ice.Object\n            {\n            };\n        \n            Glacier2.IdentitySetPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(Glacier2.IdentitySet, Glacier2.IdentitySetPrx, iceC_Glacier2_IdentitySet_ids, 0,\n            {\n                \"add\": [, 2, 2, , , [[\"Ice.IdentitySeqHelper\"]], , , , ],\n                \"remove\": [, 2, 2, , , [[\"Ice.IdentitySeqHelper\"]], , , , ],\n                \"get\": [, 2, 2, , [\"Ice.IdentitySeqHelper\"], , , , , ]\n            });\n        \n            const iceC_Glacier2_SessionControl_ids = [\n                \"::Glacier2::SessionControl\",\n                \"::Ice::Object\"\n            ];\n        \n            /**\n             * An administrative session control object, which is tied to the\n             * lifecycle of a {@link Session}.\n             *\n             * @see Session\n             *\n             **/\n            Glacier2.SessionControl = class extends Ice.Object\n            {\n            };\n        \n            Glacier2.SessionControlPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(Glacier2.SessionControl, Glacier2.SessionControlPrx, iceC_Glacier2_SessionControl_ids, 0,\n            {\n                \"categories\": [, , , , [\"Glacier2.StringSetPrx\"], , , , , ],\n                \"adapterIds\": [, , , , [\"Glacier2.StringSetPrx\"], , , , , ],\n                \"identities\": [, , , , [\"Glacier2.IdentitySetPrx\"], , , , , ],\n                \"getSessionTimeout\": [, 2, 2, , [3], , , , , ],\n                \"destroy\": [, , , , , , , , , ]\n            });\n        \n            const iceC_Glacier2_SessionManager_ids = [\n                \"::Glacier2::SessionManager\",\n                \"::Ice::Object\"\n            ];\n        \n            /**\n             * The session manager for username/password authenticated users that\n             * is responsible for managing {@link Session} objects. New session objects\n             * are created by the {@link Router} object calling on an application-provided\n             * session manager. If no session manager is provided by the application,\n             * no client-visible sessions are passed to the client.\n             *\n             * @see Router\n             * @see Session\n             *\n             **/\n            Glacier2.SessionManager = class extends Ice.Object\n            {\n            };\n        \n            Glacier2.SessionManagerPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(Glacier2.SessionManager, Glacier2.SessionManagerPrx, iceC_Glacier2_SessionManager_ids, 0,\n            {\n                \"create\": [, , , 2, [\"Glacier2.SessionPrx\"], [[7], [\"Glacier2.SessionControlPrx\"]], ,\n                [\n                    Glacier2.CannotCreateSessionException\n                ], , ]\n            });\n        \n            const iceC_Glacier2_SSLSessionManager_ids = [\n                \"::Glacier2::SSLSessionManager\",\n                \"::Ice::Object\"\n            ];\n        \n            /**\n             * The session manager for SSL authenticated users that is\n             * responsible for managing {@link Session} objects. New session objects are\n             * created by the {@link Router} object calling on an application-provided\n             * session manager. If no session manager is provided by the\n             * application, no client-visible sessions are passed to the client.\n             *\n             * @see Router\n             * @see Session\n             *\n             **/\n            Glacier2.SSLSessionManager = class extends Ice.Object\n            {\n            };\n        \n            Glacier2.SSLSessionManagerPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(Glacier2.SSLSessionManager, Glacier2.SSLSessionManagerPrx, iceC_Glacier2_SSLSessionManager_ids, 0,\n            {\n                \"create\": [, , , 2, [\"Glacier2.SessionPrx\"], [[Glacier2.SSLInfo], [\"Glacier2.SessionControlPrx\"]], ,\n                [\n                    Glacier2.CannotCreateSessionException\n                ], , ]\n            });\n        \n    }());\n\n    (function()\n    {\n        //\n        // Copyright (c) ZeroC, Inc. All rights reserved.\n        //\n        //\n        // Ice version 3.7.2\n        //\n        // <auto-generated>\n        //\n        // Generated from file `PermissionsVerifierF.ice'\n        //\n        // Warning: do not edit this file.\n        //\n        // </auto-generated>\n        //\n        \n        /* eslint-disable */\n        /* jshint ignore: start */\n        \n        \n    }());\n\n    (function()\n    {\n        //\n        // Copyright (c) ZeroC, Inc. All rights reserved.\n        //\n        //\n        // Ice version 3.7.2\n        //\n        // <auto-generated>\n        //\n        // Generated from file `PermissionsVerifier.ice'\n        //\n        // Warning: do not edit this file.\n        //\n        // </auto-generated>\n        //\n        \n        /* eslint-disable */\n        /* jshint ignore: start */\n        \n        \n            /**\n             * This exception is raised if a client is denied the ability to create\n             * a session with the router.\n             *\n             **/\n            Glacier2.PermissionDeniedException = class extends Ice.UserException\n            {\n                constructor(reason = \"\", _cause = \"\")\n                {\n                    super(_cause);\n                    this.reason = reason;\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::Glacier2::PermissionDeniedException\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return Glacier2.PermissionDeniedException;\n                }\n        \n                _writeMemberImpl(ostr)\n                {\n                    ostr.writeString(this.reason);\n                }\n        \n                _readMemberImpl(istr)\n                {\n                    this.reason = istr.readString();\n                }\n            };\n        \n            Slice.PreservedUserException(Glacier2.PermissionDeniedException);\n        \n            const iceC_Glacier2_PermissionsVerifier_ids = [\n                \"::Glacier2::PermissionsVerifier\",\n                \"::Ice::Object\"\n            ];\n        \n            /**\n             * The Glacier2 permissions verifier. This is called through the\n             * process of establishing a session.\n             *\n             * @see Router\n             *\n             **/\n            Glacier2.PermissionsVerifier = class extends Ice.Object\n            {\n            };\n        \n            Glacier2.PermissionsVerifierPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(Glacier2.PermissionsVerifier, Glacier2.PermissionsVerifierPrx, iceC_Glacier2_PermissionsVerifier_ids, 0,\n            {\n                \"checkPermissions\": [, 2, 1, 2, [1], [[7], [7]], [[7]],\n                [\n                    Glacier2.PermissionDeniedException\n                ], , ]\n            });\n        \n            const iceC_Glacier2_SSLPermissionsVerifier_ids = [\n                \"::Glacier2::SSLPermissionsVerifier\",\n                \"::Ice::Object\"\n            ];\n        \n            /**\n             * The SSL Glacier2 permissions verifier. This is called through the\n             * process of establishing a session.\n             *\n             * @see Router\n             *\n             **/\n            Glacier2.SSLPermissionsVerifier = class extends Ice.Object\n            {\n            };\n        \n            Glacier2.SSLPermissionsVerifierPrx = class extends Ice.ObjectPrx\n            {\n            };\n        \n            Slice.defineOperations(Glacier2.SSLPermissionsVerifier, Glacier2.SSLPermissionsVerifierPrx, iceC_Glacier2_SSLPermissionsVerifier_ids, 0,\n            {\n                \"authorize\": [, 2, 1, 2, [1], [[Glacier2.SSLInfo]], [[7]],\n                [\n                    Glacier2.PermissionDeniedException\n                ], , ]\n            });\n        \n    }());\n\n    (function()\n    {\n        //\n        // Copyright (c) ZeroC, Inc. All rights reserved.\n        //\n        //\n        // Ice version 3.7.2\n        //\n        // <auto-generated>\n        //\n        // Generated from file `RouterF.ice'\n        //\n        // Warning: do not edit this file.\n        //\n        // </auto-generated>\n        //\n        \n        /* eslint-disable */\n        /* jshint ignore: start */\n        \n        \n    }());\n\n    (function()\n    {\n        //\n        // Copyright (c) ZeroC, Inc. All rights reserved.\n        //\n        //\n        // Ice version 3.7.2\n        //\n        // <auto-generated>\n        //\n        // Generated from file `Router.ice'\n        //\n        // Warning: do not edit this file.\n        //\n        // </auto-generated>\n        //\n        \n        /* eslint-disable */\n        /* jshint ignore: start */\n        \n        \n            /**\n             * This exception is raised if a client tries to destroy a session\n             * with a router, but no session exists for the client.\n             *\n             * @see Router#destroySession\n             *\n             **/\n            Glacier2.SessionNotExistException = class extends Ice.UserException\n            {\n                constructor(_cause = \"\")\n                {\n                    super(_cause);\n                }\n        \n                static get _parent()\n                {\n                    return Ice.UserException;\n                }\n        \n                static get _id()\n                {\n                    return \"::Glacier2::SessionNotExistException\";\n                }\n        \n                _mostDerivedType()\n                {\n                    return Glacier2.SessionNotExistException;\n                }\n            };\n        \n            const iceC_Glacier2_Router_ids = [\n                \"::Glacier2::Router\",\n                \"::Ice::Object\",\n                \"::Ice::Router\"\n            ];\n        \n            /**\n             * The Glacier2 specialization of the <code>Ice::Router</code> interface.\n             *\n             **/\n            Glacier2.Router = class extends Ice.Object\n            {\n                static get _iceImplements()\n                {\n                    return [\n                        Ice.Router\n                    ];\n                }\n            };\n        \n            Glacier2.RouterPrx = class extends Ice.ObjectPrx\n            {\n                static get _implements()\n                {\n                    return [\n                        Ice.RouterPrx];\n                }\n            };\n        \n            Slice.defineOperations(Glacier2.Router, Glacier2.RouterPrx, iceC_Glacier2_Router_ids, 0,\n            {\n                \"getCategoryForClient\": [, 2, 1, , [7], , , , , ],\n                \"createSession\": [, , , 2, [\"Glacier2.SessionPrx\"], [[7], [7]], ,\n                [\n                    Glacier2.CannotCreateSessionException,\n                    Glacier2.PermissionDeniedException\n                ], , ],\n                \"createSessionFromSecureConnection\": [, , , 2, [\"Glacier2.SessionPrx\"], , ,\n                [\n                    Glacier2.CannotCreateSessionException,\n                    Glacier2.PermissionDeniedException\n                ], , ],\n                \"refreshSession\": [, , , , , , ,\n                [\n                    Glacier2.SessionNotExistException\n                ], , ],\n                \"destroySession\": [, , , , , , ,\n                [\n                    Glacier2.SessionNotExistException\n                ], , ],\n                \"getSessionTimeout\": [, 2, 1, , [4], , , , , ],\n                \"getACMTimeout\": [, 2, 1, , [3], , , , , ]\n            });\n        \n    }());\n\n    (function()\n    {\n        //\n        // Copyright (c) ZeroC, Inc. All rights reserved.\n        //\n        \n        \n        \n    }());\n\n    root.Glacier2 = Glacier2;\n    root.ice = ice;\n}());\n\n"],"file":"Glacier2.js"}