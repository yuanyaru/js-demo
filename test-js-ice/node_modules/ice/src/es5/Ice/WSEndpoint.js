"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
var Ice = require("../Ice/ModuleRegistry").Ice;

Ice._ModuleRegistry.require(module, ["../Ice/HashUtil", "../Ice/EndpointI", "../Ice/LocalException", "../Ice/WSTransceiver", "../Ice/EndpointInfo"]);

var HashUtil = Ice.HashUtil;
var EndpointI = Ice.EndpointI;

var WSEndpoint =
/*#__PURE__*/
function (_EndpointI) {
  _inherits(WSEndpoint, _EndpointI);

  function WSEndpoint(instance, del, re) {
    var _this;

    _classCallCheck(this, WSEndpoint);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(WSEndpoint).call(this));
    _this._instance = instance;
    _this._delegate = del;
    _this._resource = re || "/";
    return _this;
  }

  _createClass(WSEndpoint, [{
    key: "getInfo",
    value: function getInfo() {
      var _this2 = this;

      var info = new Ice.WSEndpointInfo();

      info.type = function () {
        return _this2.type();
      };

      info.datagram = function () {
        return _this2.datagram();
      };

      info.secure = function () {
        return _this2.secure();
      };

      info.resource = this._resource;
      info.underlying = this._delegate.getInfo();
      info.timeout = info.underlying.timeout;
      info.compress = info.underlying.compress;
      return info;
    }
  }, {
    key: "type",
    value: function type() {
      return this._delegate.type();
    }
  }, {
    key: "protocol",
    value: function protocol() {
      return this._delegate.protocol();
    }
  }, {
    key: "streamWrite",
    value: function streamWrite(s) {
      s.startEncapsulation();

      this._delegate.streamWriteImpl(s);

      s.writeString(this._resource);
      s.endEncapsulation();
    }
  }, {
    key: "timeout",
    value: function timeout() {
      return this._delegate.timeout();
    }
  }, {
    key: "changeTimeout",
    value: function changeTimeout(timeout) {
      if (timeout === this._delegate.timeout()) {
        return this;
      } else {
        return new WSEndpoint(this._instance, this._delegate.changeTimeout(timeout), this._resource);
      }
    }
  }, {
    key: "changeConnectionId",
    value: function changeConnectionId(connectionId) {
      if (connectionId === this._delegate.connectionId()) {
        return this;
      } else {
        return new WSEndpoint(this._instance, this._delegate.changeConnectionId(connectionId), this._resource);
      }
    }
  }, {
    key: "compress",
    value: function compress() {
      return this._delegate.compress();
    }
  }, {
    key: "changeCompress",
    value: function changeCompress(compress) {
      if (compress === this._delegate.compress()) {
        return this;
      } else {
        return new WSEndpoint(this._instance, this._delegate.changeCompress(compress), this._resource);
      }
    }
  }, {
    key: "datagram",
    value: function datagram() {
      return this._delegate.datagram();
    }
  }, {
    key: "secure",
    value: function secure() {
      return this._delegate.secure();
    }
  }, {
    key: "connect",
    value: function connect() {
      return Ice.WSTransceiver.createOutgoing(this._instance, this._delegate.secure(), this._delegate.getAddress(), this._resource);
    }
  }, {
    key: "hashCode",
    value: function hashCode() {
      if (this._hashCode === undefined) {
        this._hashCode = this._delegate.hashCode();
        this._hashCode = HashUtil.addString(this._hashCode, this._resource);
      }

      return this._hashCode;
    }
  }, {
    key: "compareTo",
    value: function compareTo(p) {
      if (this === p) {
        return 0;
      }

      if (p === null) {
        return 1;
      }

      if (!(p instanceof WSEndpoint)) {
        return this.type() < p.type() ? -1 : 1;
      }

      var r = this._delegate.compareTo(p._delegate);

      if (r !== 0) {
        return r;
      }

      if (this._resource !== p._resource) {
        return this._resource < p._resource ? -1 : 1;
      }

      return 0;
    }
  }, {
    key: "options",
    value: function options() {
      //
      // WARNING: Certain features, such as proxy validation in Glacier2,
      // depend on the format of proxy strings. Changes to toString() and
      // methods called to generate parts of the reference string could break
      // these features. Please review for all features that depend on the
      // format of proxyToString() before changing this and related code.
      //
      var s = this._delegate.options();

      if (this._resource !== null && this._resource.length > 0) {
        s += " -r ";
        s += this._resource.indexOf(':') !== -1 ? "\"" + this._resource + "\"" : this._resource;
      }

      return s;
    }
  }, {
    key: "toConnectorString",
    value: function toConnectorString() {
      return this._delegate.toConnectorString();
    }
  }, {
    key: "initWithStream",
    value: function initWithStream(s) {
      this._resource = s.readString();
    }
  }, {
    key: "checkOption",
    value: function checkOption(option, argument, endpoint) {
      if (option === "-r") {
        if (argument === null) {
          throw new Ice.EndpointParseException("no argument provided for -r option in endpoint " + endpoint);
        }

        this._resource = argument;
      } else {
        return false;
      }

      return true;
    }
  }, {
    key: "connectable",
    value: function connectable() {
      return typeof Ice.WSTransceiver !== "undefined";
    }
  }]);

  return WSEndpoint;
}(EndpointI);

Ice.WSEndpoint = WSEndpoint;
exports.Ice = Ice;