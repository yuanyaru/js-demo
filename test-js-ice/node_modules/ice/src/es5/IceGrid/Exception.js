"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.2
//
// <auto-generated>
//
// Generated from file `Exception.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */

/* jshint ignore: start */

/* slice2js browser-bundle-skip */
(function (module, require, exports) {
  /* slice2js browser-bundle-skip-end */

  /* slice2js browser-bundle-skip */
  var _ModuleRegistry = require("../Ice/ModuleRegistry").Ice._ModuleRegistry;

  var Ice = _ModuleRegistry.require(module, ["../Ice/Exception", "../Ice/Long", "../Ice/HashMap", "../Ice/HashUtil", "../Ice/ArrayUtil", "../Ice/StreamHelpers", "../Ice/Identity", "../Ice/BuiltinSequences"]).Ice;

  var Slice = Ice.Slice;
  /* slice2js browser-bundle-skip-end */

  /* slice2js browser-bundle-skip */

  var IceGrid = _ModuleRegistry.module("IceGrid");
  /* slice2js browser-bundle-skip-end */

  /**
   * This exception is raised if an application does not exist.
   *
   **/


  IceGrid.ApplicationNotExistException =
  /*#__PURE__*/
  function (_Ice$UserException) {
    _inherits(_class, _Ice$UserException);

    function _class() {
      var _this;

      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, _cause));
      _this.name = name;
      return _this;
    }

    _createClass(_class, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.ApplicationNotExistException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.name);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.name = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::ApplicationNotExistException";
      }
    }]);

    return _class;
  }(Ice.UserException);
  /**
   * This exception is raised if a server does not exist.
   *
   **/


  IceGrid.ServerNotExistException =
  /*#__PURE__*/
  function (_Ice$UserException2) {
    _inherits(_class2, _Ice$UserException2);

    function _class2() {
      var _this2;

      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class2);

      _this2 = _possibleConstructorReturn(this, _getPrototypeOf(_class2).call(this, _cause));
      _this2.id = id;
      return _this2;
    }

    _createClass(_class2, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.ServerNotExistException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.id);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.id = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::ServerNotExistException";
      }
    }]);

    return _class2;
  }(Ice.UserException);
  /**
   * This exception is raised if a server failed to start.
   *
   **/


  IceGrid.ServerStartException =
  /*#__PURE__*/
  function (_Ice$UserException3) {
    _inherits(_class3, _Ice$UserException3);

    function _class3() {
      var _this3;

      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      var _cause = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";

      _classCallCheck(this, _class3);

      _this3 = _possibleConstructorReturn(this, _getPrototypeOf(_class3).call(this, _cause));
      _this3.id = id;
      _this3.reason = reason;
      return _this3;
    }

    _createClass(_class3, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.ServerStartException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.id);
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.id = istr.readString();
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::ServerStartException";
      }
    }]);

    return _class3;
  }(Ice.UserException);
  /**
   * This exception is raised if a server failed to stop.
   *
   **/


  IceGrid.ServerStopException =
  /*#__PURE__*/
  function (_Ice$UserException4) {
    _inherits(_class4, _Ice$UserException4);

    function _class4() {
      var _this4;

      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      var _cause = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";

      _classCallCheck(this, _class4);

      _this4 = _possibleConstructorReturn(this, _getPrototypeOf(_class4).call(this, _cause));
      _this4.id = id;
      _this4.reason = reason;
      return _this4;
    }

    _createClass(_class4, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.ServerStopException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.id);
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.id = istr.readString();
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::ServerStopException";
      }
    }]);

    return _class4;
  }(Ice.UserException);
  /**
   * This exception is raised if an adapter does not exist.
   *
   **/


  IceGrid.AdapterNotExistException =
  /*#__PURE__*/
  function (_Ice$UserException5) {
    _inherits(_class5, _Ice$UserException5);

    function _class5() {
      var _this5;

      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class5);

      _this5 = _possibleConstructorReturn(this, _getPrototypeOf(_class5).call(this, _cause));
      _this5.id = id;
      return _this5;
    }

    _createClass(_class5, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.AdapterNotExistException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.id);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.id = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::AdapterNotExistException";
      }
    }]);

    return _class5;
  }(Ice.UserException);
  /**
   * This exception is raised if an object already exists.
   *
   **/


  IceGrid.ObjectExistsException =
  /*#__PURE__*/
  function (_Ice$UserException6) {
    _inherits(_class6, _Ice$UserException6);

    function _class6() {
      var _this6;

      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Ice.Identity();

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class6);

      _this6 = _possibleConstructorReturn(this, _getPrototypeOf(_class6).call(this, _cause));
      _this6.id = id;
      return _this6;
    }

    _createClass(_class6, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.ObjectExistsException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        Ice.Identity.write(ostr, this.id);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.id = Ice.Identity.read(istr, this.id);
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::ObjectExistsException";
      }
    }]);

    return _class6;
  }(Ice.UserException);
  /**
   * This exception is raised if an object is not registered.
   *
   **/


  IceGrid.ObjectNotRegisteredException =
  /*#__PURE__*/
  function (_Ice$UserException7) {
    _inherits(_class7, _Ice$UserException7);

    function _class7() {
      var _this7;

      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Ice.Identity();

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class7);

      _this7 = _possibleConstructorReturn(this, _getPrototypeOf(_class7).call(this, _cause));
      _this7.id = id;
      return _this7;
    }

    _createClass(_class7, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.ObjectNotRegisteredException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        Ice.Identity.write(ostr, this.id);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.id = Ice.Identity.read(istr, this.id);
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::ObjectNotRegisteredException";
      }
    }]);

    return _class7;
  }(Ice.UserException);
  /**
   * This exception is raised if a node does not exist.
   *
   **/


  IceGrid.NodeNotExistException =
  /*#__PURE__*/
  function (_Ice$UserException8) {
    _inherits(_class8, _Ice$UserException8);

    function _class8() {
      var _this8;

      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class8);

      _this8 = _possibleConstructorReturn(this, _getPrototypeOf(_class8).call(this, _cause));
      _this8.name = name;
      return _this8;
    }

    _createClass(_class8, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.NodeNotExistException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.name);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.name = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::NodeNotExistException";
      }
    }]);

    return _class8;
  }(Ice.UserException);
  /**
   * This exception is raised if a registry does not exist.
   *
   **/


  IceGrid.RegistryNotExistException =
  /*#__PURE__*/
  function (_Ice$UserException9) {
    _inherits(_class9, _Ice$UserException9);

    function _class9() {
      var _this9;

      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class9);

      _this9 = _possibleConstructorReturn(this, _getPrototypeOf(_class9).call(this, _cause));
      _this9.name = name;
      return _this9;
    }

    _createClass(_class9, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.RegistryNotExistException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.name);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.name = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::RegistryNotExistException";
      }
    }]);

    return _class9;
  }(Ice.UserException);
  /**
   * An exception for deployment errors.
   *
   **/


  IceGrid.DeploymentException =
  /*#__PURE__*/
  function (_Ice$UserException10) {
    _inherits(_class10, _Ice$UserException10);

    function _class10() {
      var _this10;

      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class10);

      _this10 = _possibleConstructorReturn(this, _getPrototypeOf(_class10).call(this, _cause));
      _this10.reason = reason;
      return _this10;
    }

    _createClass(_class10, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.DeploymentException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::DeploymentException";
      }
    }]);

    return _class10;
  }(Ice.UserException);
  /**
   * This exception is raised if a node could not be reached.
   *
   **/


  IceGrid.NodeUnreachableException =
  /*#__PURE__*/
  function (_Ice$UserException11) {
    _inherits(_class11, _Ice$UserException11);

    function _class11() {
      var _this11;

      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      var _cause = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";

      _classCallCheck(this, _class11);

      _this11 = _possibleConstructorReturn(this, _getPrototypeOf(_class11).call(this, _cause));
      _this11.name = name;
      _this11.reason = reason;
      return _this11;
    }

    _createClass(_class11, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.NodeUnreachableException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.name);
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.name = istr.readString();
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::NodeUnreachableException";
      }
    }]);

    return _class11;
  }(Ice.UserException);
  /**
   * This exception is raised if a server could not be reached.
   *
   **/


  IceGrid.ServerUnreachableException =
  /*#__PURE__*/
  function (_Ice$UserException12) {
    _inherits(_class12, _Ice$UserException12);

    function _class12() {
      var _this12;

      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      var _cause = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";

      _classCallCheck(this, _class12);

      _this12 = _possibleConstructorReturn(this, _getPrototypeOf(_class12).call(this, _cause));
      _this12.name = name;
      _this12.reason = reason;
      return _this12;
    }

    _createClass(_class12, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.ServerUnreachableException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.name);
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.name = istr.readString();
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::ServerUnreachableException";
      }
    }]);

    return _class12;
  }(Ice.UserException);
  /**
   * This exception is raised if a registry could not be reached.
   *
   **/


  IceGrid.RegistryUnreachableException =
  /*#__PURE__*/
  function (_Ice$UserException13) {
    _inherits(_class13, _Ice$UserException13);

    function _class13() {
      var _this13;

      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      var _cause = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";

      _classCallCheck(this, _class13);

      _this13 = _possibleConstructorReturn(this, _getPrototypeOf(_class13).call(this, _cause));
      _this13.name = name;
      _this13.reason = reason;
      return _this13;
    }

    _createClass(_class13, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.RegistryUnreachableException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.name);
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.name = istr.readString();
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::RegistryUnreachableException";
      }
    }]);

    return _class13;
  }(Ice.UserException);
  /**
   * This exception is raised if an unknown signal was sent to
   * to a server.
   *
   **/


  IceGrid.BadSignalException =
  /*#__PURE__*/
  function (_Ice$UserException14) {
    _inherits(_class14, _Ice$UserException14);

    function _class14() {
      var _this14;

      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class14);

      _this14 = _possibleConstructorReturn(this, _getPrototypeOf(_class14).call(this, _cause));
      _this14.reason = reason;
      return _this14;
    }

    _createClass(_class14, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.BadSignalException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::BadSignalException";
      }
    }]);

    return _class14;
  }(Ice.UserException);
  /**
   * This exception is raised if a patch failed.
   *
   **/


  IceGrid.PatchException =
  /*#__PURE__*/
  function (_Ice$UserException15) {
    _inherits(_class15, _Ice$UserException15);

    function _class15() {
      var _this15;

      var reasons = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class15);

      _this15 = _possibleConstructorReturn(this, _getPrototypeOf(_class15).call(this, _cause));
      _this15.reasons = reasons;
      return _this15;
    }

    _createClass(_class15, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.PatchException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        Ice.StringSeqHelper.write(ostr, this.reasons);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.reasons = Ice.StringSeqHelper.read(istr);
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::PatchException";
      }
    }]);

    return _class15;
  }(Ice.UserException);
  /**
   * This exception is raised if a registry lock wasn't
   * acquired or is already held by a session.
   *
   **/


  IceGrid.AccessDeniedException =
  /*#__PURE__*/
  function (_Ice$UserException16) {
    _inherits(_class16, _Ice$UserException16);

    function _class16() {
      var _this16;

      var lockUserId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class16);

      _this16 = _possibleConstructorReturn(this, _getPrototypeOf(_class16).call(this, _cause));
      _this16.lockUserId = lockUserId;
      return _this16;
    }

    _createClass(_class16, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.AccessDeniedException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.lockUserId);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.lockUserId = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::AccessDeniedException";
      }
    }]);

    return _class16;
  }(Ice.UserException);
  /**
   * This exception is raised if the allocation of an object failed.
   *
   **/


  IceGrid.AllocationException =
  /*#__PURE__*/
  function (_Ice$UserException17) {
    _inherits(_class17, _Ice$UserException17);

    function _class17() {
      var _this17;

      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class17);

      _this17 = _possibleConstructorReturn(this, _getPrototypeOf(_class17).call(this, _cause));
      _this17.reason = reason;
      return _this17;
    }

    _createClass(_class17, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.AllocationException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::AllocationException";
      }
    }]);

    return _class17;
  }(Ice.UserException);
  /**
   * This exception is raised if the request to allocate an object times
   * out.
   *
   **/


  IceGrid.AllocationTimeoutException =
  /*#__PURE__*/
  function (_IceGrid$AllocationEx) {
    _inherits(_class18, _IceGrid$AllocationEx);

    function _class18(reason) {
      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class18);

      return _possibleConstructorReturn(this, _getPrototypeOf(_class18).call(this, reason, _cause));
    }

    _createClass(_class18, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.AllocationTimeoutException;
      }
    }], [{
      key: "_parent",
      get: function get() {
        return IceGrid.AllocationException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::AllocationTimeoutException";
      }
    }]);

    return _class18;
  }(IceGrid.AllocationException);
  /**
   * This exception is raised if a client is denied the ability to create
   * a session with IceGrid.
   *
   **/


  IceGrid.PermissionDeniedException =
  /*#__PURE__*/
  function (_Ice$UserException18) {
    _inherits(_class19, _Ice$UserException18);

    function _class19() {
      var _this18;

      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class19);

      _this18 = _possibleConstructorReturn(this, _getPrototypeOf(_class19).call(this, _cause));
      _this18.reason = reason;
      return _this18;
    }

    _createClass(_class19, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.PermissionDeniedException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::PermissionDeniedException";
      }
    }]);

    return _class19;
  }(Ice.UserException);
  /**
   * This exception is raised if an observer is already registered with
   * the registry.
   *
   * @see AdminSession#setObservers
   * @see AdminSession#setObserversByIdentity
   *
   **/


  IceGrid.ObserverAlreadyRegisteredException =
  /*#__PURE__*/
  function (_Ice$UserException19) {
    _inherits(_class20, _Ice$UserException19);

    function _class20() {
      var _this19;

      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Ice.Identity();

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class20);

      _this19 = _possibleConstructorReturn(this, _getPrototypeOf(_class20).call(this, _cause));
      _this19.id = id;
      return _this19;
    }

    _createClass(_class20, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.ObserverAlreadyRegisteredException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        Ice.Identity.write(ostr, this.id);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.id = Ice.Identity.read(istr, this.id);
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::ObserverAlreadyRegisteredException";
      }
    }]);

    return _class20;
  }(Ice.UserException);
  /**
   * This exception is raised if a file is not available.
   *
   * @see AdminSession#openServerStdOut
   * @see AdminSession#openServerStdErr
   * @see AdminSession#openNodeStdOut
   * @see AdminSession#openNodeStdErr
   * @see AdminSession#openRegistryStdOut
   * @see AdminSession#openRegistryStdErr
   *
   **/


  IceGrid.FileNotAvailableException =
  /*#__PURE__*/
  function (_Ice$UserException20) {
    _inherits(_class21, _Ice$UserException20);

    function _class21() {
      var _this20;

      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      var _cause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

      _classCallCheck(this, _class21);

      _this20 = _possibleConstructorReturn(this, _getPrototypeOf(_class21).call(this, _cause));
      _this20.reason = reason;
      return _this20;
    }

    _createClass(_class21, [{
      key: "_mostDerivedType",
      value: function _mostDerivedType() {
        return IceGrid.FileNotAvailableException;
      }
    }, {
      key: "_writeMemberImpl",
      value: function _writeMemberImpl(ostr) {
        ostr.writeString(this.reason);
      }
    }, {
      key: "_readMemberImpl",
      value: function _readMemberImpl(istr) {
        this.reason = istr.readString();
      }
    }], [{
      key: "_parent",
      get: function get() {
        return Ice.UserException;
      }
    }, {
      key: "_id",
      get: function get() {
        return "::IceGrid::FileNotAvailableException";
      }
    }]);

    return _class21;
  }(Ice.UserException);
  /* slice2js browser-bundle-skip */


  exports.IceGrid = IceGrid;
  /* slice2js browser-bundle-skip-end */

  /* slice2js browser-bundle-skip */
})(typeof global !== "undefined" && typeof global.process !== "undefined" ? module : undefined, typeof global !== "undefined" && typeof global.process !== "undefined" ? require : typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope ? self.Ice._require : window.Ice._require, typeof global !== "undefined" && typeof global.process !== "undefined" ? exports : typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope ? self : window);
/* slice2js browser-bundle-skip-end */