//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.2
//
// <auto-generated>
//
// Generated from file `UserAccountMapper.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


export namespace IceGrid
{
    /**
     * This exception is raised if a user account for a given session
     * identifier can't be found.
     */
    class UserAccountNotFoundException extends Ice.UserException
    {
    }

    abstract class UserAccountMapperPrx extends Ice.ObjectPrx
    {
        /**
         * Get the name of the user account for the given user. This is
         * used by IceGrid nodes to figure out the user account to use
         * to run servers.
         * @param user The value of the server descriptor's <code>user</code>
         * attribute. If this attribute is not defined, and the server's
         * activation mode is <code>session</code>, the default value of
         * <code>user</code> is the session identifier.
         * @param context The Context map to send with the invocation.
         * @return The asynchronous result object for the invocation.
         */
        getUserAccount(user:string, context?:Map<string, string>):Ice.AsyncResult<string>;

        /**
         * Downcasts a proxy without confirming the target object's type via a remote invocation.
         * @param prx The target proxy.
         * @return A proxy with the requested type.
         */
        static uncheckedCast(prx:Ice.ObjectPrx, facet?:string):UserAccountMapperPrx;
        /**
         * Downcasts a proxy after confirming the target object's type via a remote invocation.
         * @param prx The target proxy.
         * @param facet A facet name.
         * @param context The context map for the invocation.
         * @return A proxy with the requested type and facet, or nil if the target proxy is nil or the target
         * object does not support the requested type.
         */
        static checkedCast(prx:Ice.ObjectPrx, facet?:string, contex?:Map<string, string>):Ice.AsyncResult<UserAccountMapperPrx>;
    }

    abstract class UserAccountMapper extends Ice.Object
    {
        /**
         * A user account mapper object is used by IceGrid nodes to map
         * session identifiers to user accounts.
         * @param current The Current object for the invocation.
         * @return The result or a promise like object that will be resolved with the result of the invocation.
         */
        abstract getUserAccount(user:string, current:Ice.Current):PromiseLike<string>|string;
        /**
         * Obtains the Slice type ID of this type.
         * @return The return value is always "::IceGrid::UserAccountMapper".
         */
        static ice_staticId():string;
    }
}
